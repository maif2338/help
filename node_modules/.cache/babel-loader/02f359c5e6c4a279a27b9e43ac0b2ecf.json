{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/fannymai/Documents/project-2-kelsonflint/src/components/watch_list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AnimalList from './animal_list';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport AnimalCard from './animal_card.js';\nimport Authentication, { userID } from './Authentication';\nimport ANIMALS from \"../animal-data.json\";\nimport { Button } from \"react-bootstrap\";\nimport { NavLink } from 'react-router-dom';\nexport default function WatchList(props) {\n  if (userID) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"watch-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: 'url(\"/img/elephant-landing.jpg\")'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-justify text-center text-white\",\n            children: \"My Watchlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        className: \"watch-list-page\",\n        children: /*#__PURE__*/_jsxDEV(AnimalWatchList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Need to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Authentication, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}\n_c = WatchList;\n\nfunction AnimalWatchList(props) {\n  _s();\n\n  let userKey = userID;\n  console.log(userKey);\n  const userRef = firebase.database().ref(userKey);\n  const [data, setData] = useState([]); // To read the data located at ref. A DataSnapshot is passed to the event callbacks you attach with on() or once(). \n  // You can extract the contents of the snapshot as a JavaScript object by calling the val() method.\n\n  useEffect(() => {\n    let authUnregisterFunction = firebase.auth().onAuthStateChanged(firebaseUser => {\n      if (firebaseUser) {\n        //firebaseUser defined: is logged in\n        userRef.once('value').then(dataSnapshot => {\n          // Turns snapshot to JSON\n          return dataSnapshot.val();\n        }).then(userData => {\n          if (userData !== null) {\n            if (userData[\"watchList\"]) {\n              setData(userData[\"watchList\"]);\n            }\n          } else {\n            userRef.child(\"watchList\").set({});\n            setData(null);\n          }\n        });\n      } else {\n        //firebaseUser undefined: is not logged in\n        console.log('logged out');\n      }\n\n      return function cleanup() {\n        authUnregisterFunction();\n      };\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container cards\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: data !== null ? ANIMALS.map(item => {\n          if (item.id in data) {\n            return /*#__PURE__*/_jsxDEV(AnimalCard, {\n              name: item.name,\n              population: item.population,\n              status: item.status,\n              habitat: item.habitat,\n              image: item.image,\n              id: item.id\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 36\n            }, this);\n          }\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goHome\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-info\",\n            role: \"alert\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/\",\n              class: \"alert-link\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"You currently have no animals stored in your watchlist, click here to add animals.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Portions of this page \\xA92020 INFO 340 All other attributions cited in page source.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AnimalWatchList, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c2 = AnimalWatchList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WatchList\");\n$RefreshReg$(_c2, \"AnimalWatchList\");","map":{"version":3,"sources":["/Users/fannymai/Documents/project-2-kelsonflint/src/components/watch_list.js"],"names":["React","useState","useEffect","AnimalList","firebase","AnimalCard","Authentication","userID","ANIMALS","Button","NavLink","WatchList","props","backgroundImage","AnimalWatchList","userKey","console","log","userRef","database","ref","data","setData","authUnregisterFunction","auth","onAuthStateChanged","firebaseUser","once","then","dataSnapshot","val","userData","child","set","cleanup","map","item","id","name","population","status","habitat","image"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'; \nimport AnimalList from './animal_list';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport AnimalCard from './animal_card.js';\nimport Authentication, {userID} from './Authentication';\nimport ANIMALS from \"../animal-data.json\"\nimport {Button} from \"react-bootstrap\"\nimport {NavLink} from 'react-router-dom'\n\nexport default function WatchList(props) {\n    if (userID) {\n        return (\n            <div>\n            {/* WatchListHeader component*/}\n            <header className=\"watch-list\">\n                <div style={{backgroundImage: 'url(\"/img/elephant-landing.jpg\")'}}>\n                    <h1 className=\"text-justify text-center text-white\">My Watchlist</h1>         \n                </div>\n            </header>\n            {/* AnimalWatchList that renders animal cards here*/}\n            <body className=\"watch-list-page\">\n                <AnimalWatchList/>\n            </body>       \n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h1>Need to Login</h1>\n                <Authentication />\n            </div>\n        )\n    }\n}\n\nfunction AnimalWatchList(props) {\n    let userKey = userID;\n    console.log(userKey);\n    const userRef = firebase.database().ref(userKey);\n\n    const [data, setData] = useState([]);\n\n    // To read the data located at ref. A DataSnapshot is passed to the event callbacks you attach with on() or once(). \n    // You can extract the contents of the snapshot as a JavaScript object by calling the val() method.\n    useEffect(() => {\n        let authUnregisterFunction = firebase.auth().onAuthStateChanged((firebaseUser) => {\n            if(firebaseUser){ //firebaseUser defined: is logged in\n                userRef.once('value')\n                .then((dataSnapshot) => {\n                    // Turns snapshot to JSON\n                    return dataSnapshot.val();\n                })\n                .then((userData) => {\n                    if (userData !== null) {\n                        if (userData[\"watchList\"]){\n                            setData(userData[\"watchList\"]);\n                        }\n                    } else {\n                        userRef.child(\"watchList\").set({});\n                        setData(null);\n                    }\n                });\n            } else { //firebaseUser undefined: is not logged in\n                console.log('logged out');\n\n            }\n            return function cleanup() {\n                authUnregisterFunction();\n              }\n        });\n        \n    }, [data]);\n\n    return(\n        <div>\n            <div className=\"container cards\">\n                <div className=\"row\">\n                    {(data !== null) ?\n                     ANIMALS.map((item) => {\n                        if (item.id in data) {\n                            return <AnimalCard \n                                key={item.name}\n                                name={item.name}\n                                population={item.population} \n                                status={item.status} \n                                habitat={item.habitat} \n                                image={item.image}\n                                id={item.id} \n                            />\n                        }\n                    }) : (\n                    <div className=\"goHome\">\n                        <div className=\"alert alert-info\" role=\"alert\">\n                            <NavLink to=\"/\" class=\"alert-link\"> <div>You currently have no animals stored in your watchlist, click here to add animals.</div></NavLink>\n                        </div>\n                    </div>)\n                }\n                </div>\n            </div>\n            <footer>\n                <p>\n                    Portions of this page &copy;2020 INFO 340\n                    All other attributions cited in page source.\n                </p>\n            </footer>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}